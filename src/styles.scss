/* You can add global styles to this file, and also import other style files */
// src/styles.scss (or wherever your main global styles are)

/* You'd typically import Bootstrap here in an Angular project: */
// @import "node_modules/bootstrap/scss/bootstrap";

/* Or link it in angular.json */
// "styles": [
//   "src/styles.scss",
//   "node_modules/bootstrap/dist/css/bootstrap.min.css"
// ],


// Variables (Optional, but good for consistency)
$primary-color: #6C63FF; // A purple-ish tone from the chart line
$secondary-text: #6c757d; // Bootstrap's text-secondary color
$light-bg: #f8f9fa; // Light gray background
$dark-button: #212529; // Bootstrap's dark button color
$chat-sent-bubble: #212529; // Dark for sent messages
$chat-received-bubble: #e0e0e0; // Light gray for received messages

body {
  font-family: 'Inter', sans-serif;
  background-color: #f0f2f5; // A general background for the page
  display: flex;
  justify-content: center;
  align-items: center;
  min-height: 100vh;
  margin: 0;
  overflow-x: auto; // Allow horizontal scrolling if multiple screens are displayed side-by-side
}

/* Container for multiple mobile screens, useful for showcasing */
.app-mockup-container {
  background-color: #f0f2f5;
  padding: 20px;
  border-radius: 15px;
  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
  display: flex; /* For displaying multiple screens next to each other */
  gap: 20px;    /* Space between screens */
  overflow-x: auto; /* Enable horizontal scrolling if screens exceed viewport */
  justify-content: flex-start; /* Align screens to the start */
  align-items: flex-start; /* Align screens to the top */
  flex-wrap: nowrap; /* Prevent screens from wrapping */
}

/* Base style for a single mobile screen simulation */
.mobile-screen {
  width: 320px; // Standard mobile width approximation
  min-width: 320px; // Ensure it doesn't shrink smaller
  height: 600px; // Standard mobile height approximation
  background-color: #fff;
  border-radius: 25px;
  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
  position: relative;
  overflow: hidden; // Ensures content doesn't spill
  display: flex;
  flex-direction: column;
}

.centered {
  display: block;
  align-content: center;
  min-height: 100vh;
  width: 100vw;
}

.h-centered {
  display: flex;
  align-items: center;
  flex-direction: column;
  width: 100vw;
}

/* iPhone X/11-like bottom handle */
.bottom-handle {
  width: 130px;
  height: 5px;
  background-color: #e0e0e0;
  border-radius: 5px;
  position: absolute;
  bottom: 8px;
  left: 50%;
  transform: translateX(-50%);
}

/* Status bar (time, signal, battery) common to all */
.status-bar {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 8px 15px;
  font-size: 13px;
  font-weight: 600;
  color: #333;

  .icons i {
    margin-left: 5px;
  }
}

/* Generic header for screens with back button/title */
.screen-header {
  display: flex;
  align-items: center;
  padding: 15px;
  border-bottom: 1px solid #eee;
  color: #333;

  .fa-chevron-left,
  .fa-bars {
    font-size: 1.1rem;
    cursor: pointer;
  }

  .header-title {
    font-size: 1.1rem;
    font-weight: 600;
    flex-grow: 1;
    text-align: center; // Default center alignment
  }

  &.justify-content-between .header-title {
    text-align: left; // Override for specific screens if needed
    margin-left: 10px; // Space from hamburger menu
  }
}

.screen-content {
  flex-grow: 1;
  overflow-y: auto; // Allow scrolling for content
  padding-bottom: 50px; // Space for bottom handles/bars
}

// Ensure Bootstrap is loaded before custom styles in angular.json
// Or import it if you use @import in your global SCSS
